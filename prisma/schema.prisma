// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String?
  profileImage    String?
  supabaseId      String   @unique
  isProfileComplete Boolean @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  instagramAccounts InstagramAccount[]

  @@map("users")
}

model InstagramAccount {
  id                Int      @id @default(autoincrement())
  userId            Int
  instagramUserId   String   @unique
  username          String
  accountType       String?  // personal, business, creator
  profilePictureUrl String?
  accessToken       String   @db.Text
  refreshToken      String?  @db.Text
  tokenExpiresAt    DateTime
  isActive          Boolean  @default(true)

  // Facebook 통합 필드들
  facebookPageId    String?
  facebookPageName  String?
  followersCount    Int?
  mediaCount        Int?
  biography         String?  @db.Text
  website           String?

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("instagram_accounts")
}
