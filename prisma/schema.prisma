// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String?
  profileImage    String?
  supabaseId      String   @unique
  isProfileComplete Boolean @default(false)

  // SMTP 설정 필드들
  smtpHost        String?  // SMTP 서버 주소
  smtpPort        Int?     // SMTP 포트 (예: 587, 465)
  smtpUser        String?  // SMTP 사용자명 (이메일)
  smtpPassword    String?  // SMTP 비밀번호
  smtpSecure      Boolean? @default(false) // SSL/TLS 사용 여부

  // 발신자 정보
  senderName      String?  // 발신자 이름
  brandName       String?  // 브랜드명

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  instagramAccounts InstagramAccount[]
  influencers       Influencer[]
  emailTemplates    EmailTemplate[]
  templateConnections TemplateInfluencerConnection[]
  emailsSent        EmailSent[]

  @@map("users")
}

model InstagramAccount {
  id                Int      @id @default(autoincrement())
  userId            Int
  instagramUserId   String   @unique
  username          String
  accountType       String?  // personal, business, creator
  profilePictureUrl String?
  accessToken       String   @db.Text
  refreshToken      String?  @db.Text
  tokenExpiresAt    DateTime
  isActive          Boolean  @default(true)

  // Facebook 통합 필드들
  facebookPageId    String?
  facebookPageName  String?
  followersCount    Int?
  mediaCount        Int?
  biography         String?  @db.Text
  website           String?

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("instagram_accounts")
}

model InfluencerField {
  id          Int       @id @default(autoincrement())
  key         String    @unique  // 컬럼 키 (accountId, name 등)
  label       String    // 표시명 (계정 ID, 인플루언서 이름 등)
  tooltip     String?   // 툴팁 설명
  fieldType   FieldType // 필드 타입
  isRequired  Boolean   @default(false)  // 필수 여부
  isFixed     Boolean   @default(false)  // 고정 컬럼 여부 (삭제/수정 불가)
  sortOrder   Int       @default(0)      // 정렬 순서
  isActive    Boolean   @default(true)   // 활성화 여부

  // 선택형 필드를 위한 옵션들 (JSON)
  options     Json?     // SELECT, RADIO 타입의 선택 옵션들

  // 검증 규칙 (JSON)
  validation  Json?     // min, max, pattern 등 검증 규칙

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("influencer_fields")
}

model Influencer {
  id        Int      @id @default(autoincrement())
  userId    Int      // 소유 사용자

  // 고정 필드들
  accountId String   // 계정 ID (항상 필요한 기본 식별자)

  // 동적 필드 데이터 (JSON)
  fieldData Json     // { "name": "김인플루", "followers": 125300, "categories": ["뷰티", "라이프스타일"] }

  // 메타데이터
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  connections TemplateInfluencerConnection[]
  emailsSent  EmailSent[]

  @@index([userId])
  @@index([accountId])
  @@map("influencers")
}

model EmailTemplate {
  id              Int      @id @default(autoincrement())
  userId          Int      // 템플릿 소유자
  name            String   // 템플릿 이름 (예: "초기 협업 제안")
  subject         String   // 메일 제목
  content         String   @db.Text  // 메일 본문
  variables       Json?    // 사용 가능한 변수 목록 (레거시)
  userVariables   Json?    // 사용자 정의 변수 { "변수명": ["값1", "값2", ...] }
  conditionalRules Json?   // 조건문 규칙 { "변수명": { "conditions": [...], "defaultValue": "" } }
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  connections     TemplateInfluencerConnection[]
  emailsSent      EmailSent[]

  @@index([userId])
  @@map("email_templates")
}

model TemplateInfluencerConnection {
  id            Int      @id @default(autoincrement())
  templateId    Int      // 템플릿 ID
  influencerId  Int      // 인플루언서 ID
  userId        Int      // 소유자 (보안을 위해)
  userVariables Json?    // 이 연결에 대한 사용자 변수 설정 { "변수명": "값" }
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  template      EmailTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  influencer    Influencer    @relation(fields: [influencerId], references: [id], onDelete: Cascade)
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([templateId, influencerId]) // 중복 연결 방지
  @@index([templateId])
  @@index([influencerId])
  @@index([userId])
  @@map("template_influencer_connections")
}

model EmailSent {
  id            Int      @id @default(autoincrement())
  userId        Int      // 발신자
  templateId    Int?     // 사용된 템플릿 (옵션)
  influencerId  Int?     // 수신자 인플루언서 (옵션)
  to            String   // 수신자 이메일 주소
  subject       String   // 메일 제목
  content       String   @db.Text // 메일 본문
  messageId     String?  // 메일 서버에서 반환된 메시지 ID
  status        EmailStatus @default(SENT) // 전송 상태
  errorMessage  String?  // 오류 메시지 (실패 시)
  sentAt        DateTime @default(now()) // 전송 시간

  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  template      EmailTemplate? @relation(fields: [templateId], references: [id], onDelete: SetNull)
  influencer    Influencer?   @relation(fields: [influencerId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([templateId])
  @@index([influencerId])
  @@index([sentAt])
  @@map("emails_sent")
}

enum EmailStatus {
  SENT      // 성공적으로 전송됨
  FAILED    // 전송 실패
  PENDING   // 전송 대기 중
}

enum FieldType {
  TEXT          // 짧은 텍스트
  LONG_TEXT     // 장문 텍스트 (textarea)
  NUMBER        // 숫자
  URL           // URL 링크
  EMAIL         // 이메일
  PHONE         // 전화번호
  BOOLEAN       // 체크박스 (true/false)
  SELECT        // 드롭다운 선택 (단일)
  MULTI_SELECT  // 다중 선택
  TAGS          // 태그 입력
  DATE          // 날짜
  DATETIME      // 날짜시간
  CURRENCY      // 통화/금액
  PERCENTAGE    // 퍼센트
  RATING        // 평점 (1-5)
}
